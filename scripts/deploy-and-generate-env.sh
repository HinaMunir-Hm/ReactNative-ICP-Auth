#!/bin/bash
deploy_and_generate_env(){
# Step 1: Deploy to the 'playground' network
mops install
dfx deps pull
dfx generate
dfx deploy --network playground
SCRIPT_DIR="$( cd "$( dirname)" &> /dev/null && pwd )"
echo "Script directory: $SCRIPT_DIR"
# Step 2: Define paths
ENV_FILE_PATH="$SCRIPT_DIR/.env"
OUTPUT_FILE_PATH="$SCRIPT_DIR/config/expo-env.js"

# Step 3: Extract the environment variables
if [ -f "$ENV_FILE_PATH" ]; then
    echo "Generating Expo environment module..."

    # Create the expo-env.js module and write the exports
    echo "// Generated by dfx deploy" > "$OUTPUT_FILE_PATH"
    echo "export const expoEnv = {" >> "$OUTPUT_FILE_PATH"

    # Process each line of the .dfx/playground/canister_ids file
    while IFS= read -r line; do
        # Check for valid lines containing 'CANISTER' or 'DFX' and skip comments
        if [[ "$line" == CANISTER_* || "$line" == DFX_* ]]; then
            # Extract the variable name and value
            var_name=$(echo "$line" | cut -d= -f1)
            var_value=$(echo "$line" | cut -d= -f2-)

            # Add the EXPO_PUBLIC_ prefix and write to the module
            echo "  EXPO_PUBLIC_${var_name}:${var_value}," >> "$OUTPUT_FILE_PATH"
        fi
    done < "$ENV_FILE_PATH"

    # Close the module
    echo "};" >> "$OUTPUT_FILE_PATH"

    echo "Expo environment module generated at $OUTPUT_FILE_PATH"
else
    echo "Error: Cannot find the canister environment variables file at $ENV_FILE_PATH."
fi

}

# Run the function every 20 minutes
while true; do
  deploy_and_generate_env
  echo "Waiting for 20 minutes..."
  sleep 20m
done